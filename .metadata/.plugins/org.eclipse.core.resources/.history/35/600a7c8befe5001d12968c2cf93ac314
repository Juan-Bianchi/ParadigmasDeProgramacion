package unlam.paradigmas.objetos.ej05;

import org.junit.Assert;
import org.junit.Test;

public class TarjetaBajaTests {
	
	private final double tolerancia = 0.001;

	@Test(expected = valorNegativoException.class)
	public void construyeSaldoNegativo() {
		//Arrange //Act
		TarjetaBaja tarjeta = new TarjetaBaja(-1);
	}
	
	@Test
	public void construyeSaldo() {
		//Arrange
		double esperado = Math.random() * 900 + 0;
		//Act
		TarjetaBaja tarjeta = new TarjetaBaja(esperado);
		//Assert
		Assert.assertTrue(tarjeta.obtenerSaldo() >= 0);
	}
	
	@Test
	public void traeSaldoOk() {
		//Arrange
		double esperado = Math.random() * 900 + 0;
		//Act
		TarjetaBaja tarjeta = new TarjetaBaja(esperado);
		double obtenido = tarjeta.obtenerSaldo();
		//Assert
		Assert.assertEquals(esperado, obtenido, tolerancia);
	}
	
	@Test
	public void traeSaldoMal() {
		//Arrange
		double esperado = Math.random() * 900 + 0;
		//Act
		TarjetaBaja tarjeta = new TarjetaBaja(esperado);
		double obtenido = tarjeta.obtenerSaldo();
		//Assert
		Assert.assertNotEquals(esperado + 1, obtenido, tolerancia);
	}
	
	@Test
	public void cargaSaldoOk() {
		//Arrange
		double esperado = Math.random() * 900 + 0;
		//Act
		TarjetaBaja tarjeta = new TarjetaBaja(esperado);
		tarjeta.cargar(1000.0);
		esperado += 1000.0;
		double obtenido = tarjeta.obtenerSaldo();
		//Assert
		Assert.assertEquals(esperado, obtenido, tolerancia);
	}
	
	@Test(expected = valorNegativoException.class)
	public void cargaSaldoMal() {
		//Arrange
		double esperado = Math.random() * 900 + 0;
		//Act
		TarjetaBaja tarjeta = new TarjetaBaja(esperado);
		tarjeta.cargar(-1.0);
	}
	
	

}
